<?php

namespace modava\article\models\table;

use backend\components\MyModel;
use cheatsheet\Time;
use modava\article\models\query\ArticleCategoryQuery;
use Yii;

class ActicleCategoryTable extends MyModel
{
    const STATUS_PUBLISHED = 1;
    const STATUS_DISABLED = 0;

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'article_category';
    }

    public static function find()
    {
        return new ArticleCategoryQuery(get_called_class());
    }

    public static function getAllArticleCategory($lang = null)
    {
        $cache = Yii::$app->cache;
        $key = 'redis-get-all-article-category-' . $lang;

        $data = $cache->get($key);

        if ($data === false) {
            $query = self::find();
            if ($lang != null)
                $query->where(['language' => $lang]);
            $data = $query->published()->sortDescById()->all();
            $cache->set($key, $data, Time::SECONDS_IN_A_MONTH);
        }

        return $data;
    }

    public static function getAllArticleCategoryArray($lang = null)
    {
        $cache = Yii::$app->cache;
        $key = 'redis-get-all-article-category-' . $lang;

        $data = $cache->get($key);

        if ($data === false) {
            $query = self::find();
            if ($lang != null)
                $query->where(['language' => $lang]);
            $data = $query->published()->sortDescById()->all();
            $cache->set($key, $data, Time::SECONDS_IN_A_MONTH);
        }

        return $data;
    }

    public function getCategories($categories, $parent_id, $char, &$result)
    {
        if (count($categories) > 0) {
            foreach ($categories as $key => $item) {
                if ($item->parent_id == $parent_id) {
                    $result[$item->id] = $char . $item->title;
                    unset($categories[$key]);
                    $this->getCategories($categories, $item->id, $char . '---', $result);
                }
            }
        }
    }

    public static function getCategoryByParentId($parentId = null, $lang = null)
    {
        $query = self::find();
        if ($lang != null)
            $query->where(['language' => $lang]);
        $data = $query->where(['parent_id' => $parentId])->published()->sortDescById()->all();
        if ($data == null)
            return null;
        return $data;
    }

    public function afterDelete()
    {
        $cache = Yii::$app->cache;
        $lang = $this->language;
        $key = 'redis-get-all-article-category-' . $lang;
        $cache->delete($key);
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    public function afterSave($insert, $changedAttributes)
    {
        $cache = Yii::$app->cache;
        $lang = $this->language;
        $key = 'redis-get-all-article-category-' . $lang;
        $cache->delete($key);
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    public function getCategory()
    {
        return $this->hasOne(ActicleCategoryTable::class, ['id' => 'parent_id']);
    }
}
